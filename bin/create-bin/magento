#!/bin/bash

MAGE_NAME="$1"
GITEMAIL="$(git config --global --get user.email)"

if [[ -z "$MAGE_NAME" ]]; then
  echo "The Magento install requires a name" && exit
fi

echo "Options are:"
echo "  [ ] = Latest"
echo "  [1] = 2.3 (Latest)"
echo "  [2] = 2.2 (Latest)"
echo "  [Custom] (Enter your own version)"
read -p "Version: " VERSION
if [[ -z "$VERSION" ]]; then
  echo "Using latest version";
elif [[ "$VERSION" == "1" ]]; then
  echo "Using latest 2.3"
  MVERSION="=2.3.*"
elif [[ "$VERSION" == "2" ]]; then
  echo "Using version 2.2"
  MVERSION="=2.2.*"
else
  echo "Using version $VERSION"
  MVERSION="=$VERSION"
fi

read -p "DB Host (localhost) or: " DBHOST
if [[ -z "$DBHOST" ]]; then DBHOST="localhost"; fi
read -p "DB name: ${MAGE_NAME} or " DBNAME
if [[ -z "$DBNAME" ]]; then
  if [[ -n "$MAGE_NAME" ]]; then
    DBNAME="${MAGE_NAME}"
  else
    echo "The DBName is required" && exit
  fi
fi

read -p "DB User (root) or: " DBUSER
if [[ -z "$DBUSER" ]]; then DBUSER="root"; fi
read -p "DB Password (root) or: " DBPASS
if [[ -z "$DBPASS" ]]; then DBPASS="root"; fi

if command -v valet &> /dev/null; then
  valet db create $DBNAME
else
  echo "First create a datebase for you Magento project"
  read -rsn1 -p "When ready, press any key to continue"
fi

echo "Set URL"
echo " - empty = http://${DBNAME}.test/"
echo " - s or secure = https://${DBNAME}.test/"
echo " - Or use your own"
read URL
if [[ -z "$URL" ]]; then
  URL="http://${DBNAME}.test/"
elif [[ "$URL" == "s" ]] || [[ "$URL" == "secure" ]]; then
  URL="https://${DBNAME}.test/"
  if command -v valet &> /dev/null; then valet secure; fi
fi

read -p "Email (${GITEMAIL}) or: " USEREMAIL
if [[ -z "$USEREMAIL" ]]; then USEREMAIL="$GITEMAIL"; fi
read -p "Firstname: " USERFIRST
read -p "Lastname: " USERLAST
TOLOWERNAME="$(echo "$USERFIRST" | tr '[:upper:]' '[:lower:]')"
read -p "User name (admin_${TOLOWERNAME}) or: " USERNAME
if [[ -z "$USERNAME" ]]; then USERNAME="admin_${TOLOWERNAME}"; fi
read -sp "Password (admin123) or: " USERPASS
if [[ -z "$USERPASS" ]]; then USERPASS="admin123"; fi
read -p "Language (en_US) or: " LANG
if [[ -z "$LANG" ]]; then LANG="en_US"; fi
read -p "Currency (EUR) or: " CUR
if [[ -z "$CUR" ]]; then CUR="EUR"; fi
read -p "Timezone (Europe/Amsterdam) or: " ZONE
if [[ -z "$ZONE" ]]; then ZONE="Europe/Amsterdam"; fi
read -p "BackendURL (admin) or: " BACKURL
if [[ -z "$BACKURL" ]]; then BACKURL="admin"; fi
echo ""

composer create-project \
  --repository-url=https://repo.magento.com/ magento/project-community-edition$MVERSION $MAGE_NAME &&
cd $MAGE_NAME

bin/magento setup:install \
  --base-url="${URL}" \
  --db-host="${DBHOST}" \
  --db-name="${DBNAME}" \
  --db-user="${DBUSER}" \
  --db-password="${DBPASS}" \
  --admin-firstname="${USERFIRST}" \
  --admin-lastname="${USERLAST}" \
  --admin-email="${USEREMAIL}" \
  --admin-user="${USERNAME}" \
  --admin-password="${USERPASS}" \
  --language="${LANG}" \
  --currency="${CUR}" \
  --timezone="${ZONE}" \
  --use-rewrites="1" \
  --backend-frontname="${BACKURL}"

# Get key
if [[ -e var/composer_home/auth.json ]]; then
  echo "Getting auth from var/composer_home"
  cp var/composer_home/auth.json auth.json
elif [[ -e ~/.composer/auth.json ]]; then
  echo "Getting auth from ~/.composer"
  cp ~/.composer/auth.json auth.json
fi

read -p "Also install sample data? (Y/n) "
echo ""
if [[ $REPLY =~ ^[yY]|[yY][eE][sS]$ ]]; then bin/magento sampledata:deploy; fi

read -p "Set mode to developer? (Y/n) "
echo ""
if [[ $REPLY =~ ^[yY]|[yY][eE][sS]$ ]]; then
  bin/magento deploy:mode:set developer
  bin/magento cache:disable layout block_html full_page
  echo "setting session lifetime 86400"
  bin/magento config:set admin/security/session_lifetime 86400
  echo "setting admin password lifetime âˆž"
  bin/magento config:set admin/security/password_lifetime ""
else
  bin/magento deploy:mode:set production
fi

# Lasty run the setup:upgrade
bin/magento s:up
